create 
index Community_Posts_Created
on Community_Posts
(
	Created
);

create 
index Community_Posts_Link
on Community_Posts
(
	Link
);

create 
index Community_Posts_UserId_Created
on Community_Posts
(
	UserId,
	Created
);

create 
index Community_Posts_NrUp_Created
on Community_Posts
(
	NrUp,
	Created
);

create 
index Community_Posts_NrDown_Created
on Community_Posts
(
	NrDown,
	Created
);

create
index Community_PostRef_Tag_Created_Link
on Community_PostRef
(
	Tag,
	Created,
	Link
);

create
index Community_PostRef__Link_Tag
on Community_PostRef
(
	Link,
	Tag
);

create 
index Community_Replies_Link_Reply_Created
on Community_Replies
(
	Link,
	Reply,
	Created
);

create 
index Community_Replies_Link_Reply_NrUp_Created
on Community_Replies
(
	Link,
	Reply,
	NrUp,
	Created
);

create 
index Community_Replies_Link_Reply_NrDown_Created
on Community_Replies
(
	Link,
	Reply,
	NrDown,
	Created
);

ScriptResource("/Community/Post",
(
	Link:=Request.SubPath.Substring(1);
	Post:=select top 1 * from Community_Posts where Link=Link;
	if !exists(Post) then NotFound("Post not found.");

	PostFileName:=null;
	GW:=Waher.IoTGateway.Gateway;
	if !GW.HttpServer.TryGetFileName("/Community/PostStandalone.md",PostFileName) then ServiceUnavailable("Community Service not available.");

	MarkdownContent(LoadMarkdown(PostFileName,true))
));

ScriptResource("/Community/Reply",
(
	ObjectId:=Request.SubPath.Substring(1);
	Reply:=select top 1 * from Community_Replies where ObjectId=ObjectId;
	if !exists(Reply) then NotFound("Reply not found.");

	ReplyFileName:=null;
	GW:=Waher.IoTGateway.Gateway;
	if !GW.HttpServer.TryGetFileName("/Community/ReplyStandalone.md",ReplyFileName) then ServiceUnavailable("Community Service not available.");

	MarkdownContent(LoadMarkdown(ReplyFileName,true))
));

ScriptResource("/Community/Author",
(
	Author:=Request.SubPath.Substring(1);

	AuthorFileName:=null;
	GW:=Waher.IoTGateway.Gateway;
	if !GW.HttpServer.TryGetFileName("/Community/Author.md",AuthorFileName) then ServiceUnavailable("Community Service not available.");

	MarkdownContent(LoadMarkdown(AuthorFileName,true))
));

ScriptResource("/Community/Tag",
(
	Tag:=Request.SubPath.Substring(1);

	TagFileName:=null;
	GW:=Waher.IoTGateway.Gateway;
	if !GW.HttpServer.TryGetFileName("/Community/Tag.md",TagFileName) then ServiceUnavailable("Community Service not available.");

	MarkdownContent(LoadMarkdown(TagFileName,true))
));
